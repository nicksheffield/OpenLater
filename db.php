<?php

class db{

	private $connection;
	
	private $where_conditions;
	
//----------------------------------------------------------------------------------------------------------
##################################################################################################################
//----------------------------------------------------------------------------------------------------------
	
		# use the variables (passed from the config/database file) to make the connection
	function __construct($DB){
		
		$this->connection = new mysqli(
			$DB['host'],
			$DB['username'],
			$DB['password'],
			$DB['database']
		);
		
		$this->connection->connect_error && die('Connection Error: '.$this->connection->connect_error);
	}
	
//----------------------------------------------------------------------------------------------------------
##################################################################################################################
//----------------------------------------------------------------------------------------------------------
	
	function filter($variable){
	
		if(is_array($variable)){
		
			foreach($variable as $key => $value){
				$variable[$key] = $this->connection->real_escape_string($value);
			}
			
		}else{
		
			$variable = $this->connection->real_escape_string($variable);
			
		}
		return $variable;
		
	}
	
	function filter_str($variable){
	
		if(is_array($variable)){
		
			foreach($variable as $key => $value){
				$variable[$key] = addcslashes($value,"\x00\'\x1a\x25");
			}
			
		}else{
		
			$variable = addcslashes($variable,"\x00\'\x1a\x25");
			
		}
		return $variable;
		
	}
	
//----------------------------------------------------------------------------------------------------------
##################################################################################################################
//----------------------------------------------------------------------------------------------------------
	
	function insert_id(){
		return $this->connection->insert_id;
	}
	
	function num_rows($q){
		return $q->num_rows;
	}
	
//----------------------------------------------------------------------------------------------------------
##################################################################################################################
//----------------------------------------------------------------------------------------------------------
	
	function query($query){
		
		$q = $this->connection->query($query);
		
		if(!$q) die("Query error at :".$query);
		
		return $q;
	}
	
//----------------------------------------------------------------------------------------------------------
##################################################################################################################
//----------------------------------------------------------------------------------------------------------
	
	function result_row($result){
	
		return $result->fetch_assoc();
		
	}
	
//----------------------------------------------------------------------------------------------------------
##################################################################################################################
//----------------------------------------------------------------------------------------------------------
	
	function result_set($result){
		$rows = array();
		
		while($row = $result->fetch_assoc()){
			$rows[] = $row;
		}
		
		return $rows;
	}
	
//----------------------------------------------------------------------------------------------------------
##################################################################################################################
//----------------------------------------------------------------------------------------------------------
	
	function get($table){
	
		$fields_array = func_get_args();
		
		array_shift($fields_array);
		
		if(count($fields_array)){
			$fields = array_shift($fields_array);
			foreach($fields_array as $field){
				$fields .= ', '.$field;
			}
		}else{
			$fields = '*';
		}
		
		$q = $this->query("SELECT $fields FROM $table".$this->where_conditions);
		
		$this->where_conditions='';
		
		return $this->result_set($q);
	}
	
//----------------------------------------------------------------------------------------------------------
##################################################################################################################
//----------------------------------------------------------------------------------------------------------
	
	function insert($table,$data){
		
		$fields = '';
		$values = '';
		
		foreach($data as $key => $value){
			$fields .= $key.', ';
			$values .= '\''.$value.'\', ';
		}
		
		$fields = substr($fields,0,-2);
		$values = substr($values,0,-2);
		
		$q = $this->query("INSERT INTO ".$table."(".$fields.") VALUES(".$values.")");
		
		return $q ? true : false;
	}
	
//----------------------------------------------------------------------------------------------------------
##################################################################################################################
//----------------------------------------------------------------------------------------------------------

	function update($table,$data){
		
			#values
		$values = '';
		
		foreach($data as $key => $value){
			$values .= $key."='".$value."', ";
		}
		$values = substr($values,0,-2);
		
		$q = $this->query("UPDATE ".$table." SET ".$values.$this->where_conditions);
		
		$this->where_conditions='';
		
		return $q ? true : false;
	}

//----------------------------------------------------------------------------------------------------------
##################################################################################################################
//----------------------------------------------------------------------------------------------------------

	function delete($table,$field,$value){
		
		$this->query("DELETE FROM ".$table." WHERE ".$field."='".$value."'");
		
	}
	
	
	# Set a where clause inside any future get or insert queries. Needs a bit of work

	function where($property,$value){
		
		if(!$this->where_conditions)  $this->where_conditions = ' WHERE ';
		$this->where_conditions .= "$property='$value'";
		
	}
	
	
	
	
	
	
}